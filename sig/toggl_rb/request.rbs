module TogglRb
  module RequestHelpers
    def send_request: (Symbol request_method, String resource_path, ?untyped? body, ?Hash[untyped, untyped] request_options) -> untyped

    def connection: () -> TogglRb::Connection

    def request_all: (TogglRb::Response response) -> untyped

    def handle_error: (Response response) -> untyped

    def handle_response: (Response response) -> untyped
  end

  class Request
    @connection: untyped

    def self.send_request: (TogglRb::Connection connection, Symbol request_method, String resource_path, ?untyped? body, ?Hash[untyped, untyped] request_options) -> untyped

    def initialize: (TogglRb::Connection connection) -> void

    def execute: () -> TogglRb::Response

    def send_request: (Symbol request_method, String resource_path, ?untyped? body) -> TogglRb::Response

    def delete?: () -> bool

    def get_all?: () -> bool

    def request_options: () -> Hash[Symbol, bool]

    attr_accessor params: (TogglRb::Params | TogglRb::JSONPatch)

    attr_accessor request_method: Symbol

    attr_accessor resource_path: String

    attr_writer request_options: Hash[Symbol, bool]

    private

    def build_params: (TogglRb::Params | TogglRb::JSONPatch | Hash[untyped, untyped]  | nil) -> (TogglRb::Params | TogglRb::JSONPatch)

    def log_request: () -> void

    attr_reader connection: TogglRb::Connection
  end
end
